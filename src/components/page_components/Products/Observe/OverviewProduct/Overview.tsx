import { Col, Divider, InputNumber, Rate, Row } from 'antd'
import { useState } from 'react';
import ImageZoom from "react-image-zooom";
import { useMutation, useQuery, useQueryClient } from 'react-query';
import { useParams } from 'react-router';
import { postProducts } from '../../../../../api/Products';
import { getCategoriesImages } from '../../../../../api/Categories';
import { ICategoriesImages, IPostProduct } from '../../../../../interface';
import classes from './overview.module.scss'

const Overview = () => {
  const [count, setCount] = useState<number>(1)
  function onChangeNumber(value: number) {
    setCount(value)
  }
  const params = useParams()
  const queryClient = useQueryClient()
  const { data: response, isLoading, isSuccess, isError } = useQuery(
    ['product-item', params.id],
    () => getCategoriesImages(params.id))

  const { mutateAsync } = useMutation(postProducts)

  const postProduct = async (arg: IPostProduct) => {
    await mutateAsync(arg)
    queryClient.invalidateQueries('get-products')
  }
  return (
    <div className={classes.wrapper}>
      {isLoading && <p>Loading...</p>}
      {isError && <p>Error</p>}
      {
        isSuccess && response.data.images.map((item: ICategoriesImages) => {
          if (item.product_name === params.item) {
            const { img, product_name, cost, rate, description, tags, sku } = item
            return (
              <Row>
                <Col className={classes.product_img} span={12} xs={24} sm={24} md={24} lg={12} xl={12}>
                  <ImageZoom className={classes.img} src={img} alt="" zoom="200" />
                </Col>
                <Col className={classes.product_info} span={12} xs={24} sm={24} md={24} lg={12} xl={12}>
                  <h2 className={classes.product_name}>{product_name}</h2>
                  <Divider />
                  <div className={classes.product_cost}>
                    <h3>£{cost}</h3>
                    <Rate className={classes.rate} disabled defaultValue={rate} />
                  </div>
                  <p className={classes.product_text}>{description}</p>
                  <ul className={classes.product_quality}>
                    <li>–dark green</li>
                    <li>–polyester / virgin wool / nylon</li>
                    <li>–made in italy</li>
                    <li>–model is 186 cm and wears size 48 = m</li>
                  </ul>
                  <div className={classes.btn_box}>
                    <InputNumber className={classes.input_number} min={1} max={100} defaultValue={1} onChange={onChangeNumber} />
                    <button className={classes.add_btn} onClick={() => postProduct({
                      id: product_name,
                      product_name,
                      description,
                      rate,
                      cost,
                      img,
                      count
                    })}>
                      <svg width="22" height="22" viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
                        <path d="M4.00008 5.41481L0.75708 2.17281L2.17208 0.757812L5.41408 4.00081H20.6561C20.8119 4.0008 20.9657 4.03723 21.1049 4.10718C21.2442 4.17713 21.3652 4.27868 21.4583 4.40371C21.5514 4.52874 21.6139 4.6738 21.641 4.8273C21.668 4.9808 21.6588 5.1385 21.6141 5.28781L19.2141 13.2878C19.1523 13.4939 19.0258 13.6746 18.8532 13.803C18.6806 13.9315 18.4712 14.0008 18.2561 14.0008H6.00008V16.0008H17.0001V18.0008H5.00008C4.73486 18.0008 4.48051 17.8955 4.29297 17.7079C4.10544 17.5204 4.00008 17.266 4.00008 17.0008V5.41481ZM6.00008 6.00081V12.0008H17.5121L19.3121 6.00081H6.00008ZM5.50008 22.0008C5.10226 22.0008 4.72072 21.8428 4.43942 21.5615C4.15812 21.2802 4.00008 20.8986 4.00008 20.5008C4.00008 20.103 4.15812 19.7215 4.43942 19.4402C4.72072 19.1588 5.10226 19.0008 5.50008 19.0008C5.8979 19.0008 6.27944 19.1588 6.56074 19.4402C6.84205 19.7215 7.00008 20.103 7.00008 20.5008C7.00008 20.8986 6.84205 21.2802 6.56074 21.5615C6.27944 21.8428 5.8979 22.0008 5.50008 22.0008ZM17.5001 22.0008C17.1023 22.0008 16.7207 21.8428 16.4394 21.5615C16.1581 21.2802 16.0001 20.8986 16.0001 20.5008C16.0001 20.103 16.1581 19.7215 16.4394 19.4402C16.7207 19.1588 17.1023 19.0008 17.5001 19.0008C17.8979 19.0008 18.2794 19.1588 18.5607 19.4402C18.842 19.7215 19.0001 20.103 19.0001 20.5008C19.0001 20.8986 18.842 21.2802 18.5607 21.5615C18.2794 21.8428 17.8979 22.0008 17.5001 22.0008Z" />
                      </svg>
                      Add To Card
                    </button>
                    <button className={classes.lovely_btn}>
                      <svg width="18" height="21" viewBox="0 0 18 21" xmlns="http://www.w3.org/2000/svg">
                        <path d="M1 0H17C17.2652 0 17.5196 0.105357 17.7071 0.292893C17.8946 0.48043 18 0.734784 18 1V20.276C18.0001 20.3594 17.9793 20.4416 17.9395 20.5149C17.8997 20.5882 17.8422 20.6505 17.7722 20.6959C17.7023 20.7413 17.622 20.7685 17.5388 20.775C17.4557 20.7815 17.3722 20.767 17.296 20.733L9 17.03L0.704 20.732C0.627903 20.766 0.544512 20.7805 0.46141 20.774C0.378309 20.7676 0.298133 20.7405 0.228176 20.6952C0.158219 20.6499 0.1007 20.5878 0.0608497 20.5146C0.0209992 20.4414 8.18259e-05 20.3593 0 20.276V1C0 0.734784 0.105357 0.48043 0.292893 0.292893C0.48043 0.105357 0.734784 0 1 0ZM16 17.965V2H2V17.965L9 14.841L16 17.965ZM9 11.5L6.061 13.045L6.622 9.773L4.245 7.455L7.531 6.977L9 4L10.47 6.977L13.755 7.455L11.378 9.773L11.938 13.045L9 11.5Z" />
                      </svg>
                    </button>
                  </div>
                  <h4 className={classes.extra_info}>SKU: <span>{sku}</span></h4>
                  <h4 className={classes.extra_info}>Category: <span>{params.id}</span></h4>
                  <h4 className={classes.extra_info}>Tags: {tags.map(item => <span>{item}</span>)}</h4>
                  <div className={classes.share_box}>
                    <h2>Share</h2>
                    <a href="#">
                      <svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M11 17.938C13.0173 17.6813 14.8611 16.6661 16.1568 15.0988C17.4525 13.5314 18.1027 11.5295 17.9754 9.49997C17.848 7.47041 16.9527 5.56549 15.4713 4.17238C13.9898 2.77927 12.0336 2.00252 10 2C7.96396 1.99848 6.00395 2.77334 4.51934 4.16668C3.03473 5.56002 2.13724 7.46699 2.00974 9.49904C1.88225 11.5311 2.53434 13.5353 3.83314 15.1033C5.13195 16.6712 6.97974 17.685 9 17.938V12H7V10H9V8.346C9 7.009 9.14 6.524 9.4 6.035C9.65611 5.55119 10.052 5.15569 10.536 4.9C10.918 4.695 11.393 4.572 12.223 4.519C12.552 4.498 12.978 4.524 13.501 4.599V6.499H13C12.083 6.499 11.704 6.542 11.478 6.663C11.3431 6.73236 11.2334 6.84215 11.164 6.977C11.044 7.203 11 7.427 11 8.345V10H13.5L13 12H11V17.938ZM10 20C4.477 20 0 15.523 0 10C0 4.477 4.477 0 10 0C15.523 0 20 4.477 20 10C20 15.523 15.523 20 10 20Z" />
                      </svg>
                    </a>
                    <a href="#">
                      <svg width="21" height="18" viewBox="0 0 21 18" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14.3 2.55011C13.54 2.54999 12.8103 2.84824 12.2679 3.38068C11.7256 3.91313 11.4139 4.63721 11.4 5.39711L11.372 6.97211C11.3704 7.05668 11.3509 7.13994 11.3148 7.21644C11.2787 7.29294 11.2269 7.36094 11.1627 7.41599C11.0985 7.47105 11.0233 7.5119 10.9422 7.53588C10.8611 7.55985 10.7758 7.56641 10.692 7.55511L9.13102 7.34311C7.07702 7.06311 5.10902 6.11711 3.22102 4.54411C2.62302 7.85411 3.79102 10.1471 6.60402 11.9161L8.35102 13.0141C8.43403 13.0663 8.50299 13.138 8.55187 13.223C8.60075 13.308 8.62806 13.4036 8.63141 13.5016C8.63477 13.5996 8.61407 13.6969 8.57111 13.785C8.52816 13.8731 8.46426 13.9494 8.38502 14.0071L6.79302 15.1701C7.74002 15.2291 8.63902 15.1871 9.38502 15.0391C14.103 14.0971 17.24 10.5471 17.24 4.69111C17.24 4.21311 16.228 2.55011 14.3 2.55011ZM9.40002 5.36011C9.41747 4.39616 9.71891 3.45878 10.2666 2.66534C10.8142 1.87189 11.5838 1.25763 12.4789 0.899481C13.3741 0.541329 14.3549 0.455194 15.2988 0.651862C16.2426 0.848529 17.1074 1.31926 17.785 2.00511C18.496 2.00011 19.101 2.18011 20.454 1.36011C20.119 3.00011 19.954 3.71211 19.24 4.69111C19.24 12.3331 14.543 16.0491 9.77702 17.0001C6.50902 17.6521 1.75702 16.5811 0.39502 15.1591C1.08902 15.1051 3.90902 14.8021 5.53902 13.6091C4.16002 12.7001 -1.32898 9.47011 2.27802 0.786115C3.97102 2.76311 5.68802 4.10911 7.42802 4.82311C8.58602 5.29811 8.87002 5.28811 9.40102 5.36111L9.40002 5.36011Z" />
                      </svg>
                    </a>
                    <a href="#">
                      <svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M6.49 17.191C6.514 16.855 6.562 16.52 6.634 16.19C6.697 15.895 6.888 15.06 7.168 13.85L7.175 13.82L7.562 12.152C7.641 11.812 7.702 11.548 7.743 11.46C7.54882 11.0111 7.45202 10.5261 7.459 10.037C7.459 8.7 8.215 7.664 9.195 7.664C9.555 7.658 9.899 7.814 10.137 8.09C10.375 8.365 10.485 8.734 10.439 9.086C10.439 9.539 10.354 9.884 9.986 11.121C9.915 11.359 9.866 11.525 9.82 11.692C9.769 11.88 9.725 12.05 9.688 12.214C9.592 12.6 9.68 13.011 9.925 13.32C10.0439 13.471 10.1973 13.5913 10.3724 13.6706C10.5475 13.75 10.7391 13.7861 10.931 13.776C12.423 13.776 13.531 11.791 13.531 9.228C13.531 7.258 12.241 5.954 10.099 5.954C9.56279 5.93407 9.02828 6.02563 8.52928 6.22289C8.03028 6.42015 7.57764 6.71881 7.2 7.1C6.81426 7.48954 6.50994 7.95197 6.30477 8.46034C6.0996 8.96871 5.9977 9.51284 6.005 10.061C5.98014 10.6518 6.16111 11.2328 6.517 11.705C6.698 11.845 6.767 12.088 6.692 12.295C6.651 12.463 6.552 12.847 6.516 12.975C6.50556 13.0379 6.48061 13.0975 6.44311 13.149C6.40562 13.2006 6.35662 13.2427 6.3 13.272C6.24526 13.3006 6.18449 13.3156 6.12274 13.316C6.061 13.3163 6.00006 13.3019 5.945 13.274C4.785 12.795 4.149 11.496 4.149 9.834C4.149 6.849 6.64 4.25 10.341 4.25C13.476 4.25 15.822 6.579 15.822 9.39C15.822 12.922 13.89 15.494 11.132 15.494C10.7397 15.5054 10.3502 15.4245 9.99488 15.258C9.63953 15.0914 9.32822 14.8438 9.086 14.535L9.043 14.712L8.836 15.564L8.834 15.571C8.688 16.171 8.586 16.588 8.546 16.745C8.44 17.1 8.306 17.448 8.146 17.785C10.1359 18.2587 12.2316 17.9522 14.0025 16.9285C15.7734 15.9047 17.0849 14.2416 17.6674 12.2808C18.2499 10.32 18.0593 8.21056 17.1346 6.38601C16.2099 4.56146 14.6215 3.16041 12.6957 2.47081C10.77 1.78122 8.65322 1.85547 6.78053 2.67831C4.90784 3.50115 3.42147 5.01005 2.62691 6.89492C1.83235 8.77978 1.78996 10.8974 2.50845 12.8125C3.22694 14.7277 4.65174 16.2949 6.49 17.192V17.191ZM10 20C4.477 20 0 15.523 0 10C0 4.477 4.477 0 10 0C15.523 0 20 4.477 20 10C20 15.523 15.523 20 10 20Z" />
                      </svg>
                    </a>
                  </div>
                </Col>
              </Row>
            )
          }
        })
      }
    </div>
  )
}
export default Overview